{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Javascript\\\\nextjs\\\\techronxclient\\\\component\\\\Navbar\\\\ActiveLink.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport React, { Children } from 'react';\n\nvar ActiveLink = function ActiveLink(_ref) {\n  _s();\n\n  var children = _ref.children,\n      activeClassName = _ref.activeClassName,\n      props = _objectWithoutProperties(_ref, [\"children\", \"activeClassName\"]);\n\n  var _useRouter = useRouter(),\n      asPath = _useRouter.asPath;\n\n  var child = Children.only(children);\n  var childClassName = child.props.className || '';\n  var className = asPath === props.href ? \"\".concat(childClassName, \" \").concat(activeClassName).trim() : childClassName;\n  return __jsx(Link, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }), React.cloneElement(child, {\n    className: className || null\n  }));\n};\n\n_s(ActiveLink, \"9pMG9Ra3x5O/yaZiUz6XxVJ+Rds=\", false, function () {\n  return [useRouter];\n});\n\n_c = ActiveLink;\nActiveLink.propTypes = {\n  activeClassName: PropTypes.string.isRequired\n};\nexport default ActiveLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActiveLink\");","map":{"version":3,"sources":["C:/Javascript/nextjs/techronxclient/component/Navbar/ActiveLink.js"],"names":["useRouter","PropTypes","Link","React","Children","ActiveLink","children","activeClassName","props","asPath","child","only","childClassName","className","href","trim","cloneElement","propTypes","string","isRequired"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAA6C;AAAA;;AAAA,MAA1CC,QAA0C,QAA1CA,QAA0C;AAAA,MAAhCC,eAAgC,QAAhCA,eAAgC;AAAA,MAAZC,KAAY;;AAAA,mBAC3CR,SAAS,EADkC;AAAA,MACtDS,MADsD,cACtDA,MADsD;;AAE9D,MAAMC,KAAK,GAAGN,QAAQ,CAACO,IAAT,CAAcL,QAAd,CAAd;AACA,MAAMM,cAAc,GAAGF,KAAK,CAACF,KAAN,CAAYK,SAAZ,IAAyB,EAAhD;AAEA,MAAMA,SAAS,GACbJ,MAAM,KAAKD,KAAK,CAACM,IAAjB,GACI,UAAGF,cAAH,cAAqBL,eAArB,EAAuCQ,IAAvC,EADJ,GAEIH,cAHN;AAKA,SACE,MAAC,IAAD,eAAUJ,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGL,KAAK,CAACa,YAAN,CAAmBN,KAAnB,EAA0B;AACzBG,IAAAA,SAAS,EAAEA,SAAS,IAAI;AADC,GAA1B,CADH,CADF;AAOD,CAjBD;;GAAMR,U;UACeL,S;;;KADfK,U;AAmBNA,UAAU,CAACY,SAAX,GAAuB;AACrBV,EAAAA,eAAe,EAAEN,SAAS,CAACiB,MAAV,CAAiBC;AADb,CAAvB;AAIA,eAAed,UAAf","sourcesContent":["import { useRouter } from 'next/router'\r\nimport PropTypes from 'prop-types'\r\nimport Link from 'next/link'\r\nimport React, { Children } from 'react'\r\n\r\nconst ActiveLink = ({ children, activeClassName, ...props }) => {\r\n  const { asPath } = useRouter()\r\n  const child = Children.only(children)\r\n  const childClassName = child.props.className || ''\r\n\r\n  const className =\r\n    asPath === props.href\r\n      ? `${childClassName} ${activeClassName}`.trim()\r\n      : childClassName\r\n\r\n  return (\r\n    <Link {...props}>\r\n      {React.cloneElement(child, {\r\n        className: className || null,\r\n      })}\r\n    </Link>\r\n  )\r\n}\r\n\r\nActiveLink.propTypes = {\r\n  activeClassName: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default ActiveLink"]},"metadata":{},"sourceType":"module"}