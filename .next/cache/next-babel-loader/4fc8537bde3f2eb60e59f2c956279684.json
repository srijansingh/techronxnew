{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\javascript\\\\techronx\\\\techronxnew\\\\component\\\\Solution\\\\Solution.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport styling from \"./css/solution.module.css\";\nimport Container from '@material-ui/core/Container';\nimport { withStyles } from '@material-ui/core/styles';\n\nvar styles = function styles(theme) {\n  return {\n    cardGrid: {\n      paddingTop: theme.spacing(8),\n      paddingBottom: theme.spacing(8),\n      backgroundColor: 'red'\n    },\n    card: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    cardMedia: {\n      paddingTop: '75.25%',\n      backgroundPosition: 'center'\n    },\n    cardContent: {\n      flexGrow: 1\n    }\n  };\n};\n\nvar Solutions = /*#__PURE__*/function (_Component) {\n  _inherits(Solutions, _Component);\n\n  var _super = _createSuper(Solutions);\n\n  function Solutions() {\n    _classCallCheck(this, Solutions);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Solutions, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n\n      var Solution = __jsx(\"div\", {\n        className: styling.card,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 19\n        }\n      }, __jsx(\"img\", {\n        className: styling.img,\n        src: this.props.thumbnail,\n        title: this.props.heading,\n        style: {\n          backgroundColor: 'black'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      }), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 23\n        }\n      }, this.props.heading), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 23\n        }\n      }, this.props.content)));\n\n      return __jsx(\"div\", {\n        className: styling.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 12\n        }\n      }, __jsx(\"div\", {\n        className: styling.grid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 16\n        }\n      }, Solution));\n    }\n  }]);\n\n  return Solutions;\n}(Component);\n\nexport default withStyles(styles, {\n  withTheme: true\n})(Solutions);","map":{"version":3,"sources":["C:/javascript/techronx/techronxnew/component/Solution/Solution.js"],"names":["React","Component","Card","CardContent","CardMedia","Grid","Typography","styling","Container","withStyles","styles","theme","cardGrid","paddingTop","spacing","paddingBottom","backgroundColor","card","height","display","flexDirection","cardMedia","backgroundPosition","cardContent","flexGrow","Solutions","classes","props","Solution","img","thumbnail","heading","content","container","grid","withTheme"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,UAAU,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADN;AAENC,MAAAA,aAAa,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd,CAFT;AAGNE,MAAAA,eAAe,EAAC;AAHV,KADW;AAMrBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,OAAO,EAAE,MAFL;AAGJC,MAAAA,aAAa,EAAE;AAHX,KANe;AAWrBC,IAAAA,SAAS,EAAE;AACTR,MAAAA,UAAU,EAAE,QADH;AAETS,MAAAA,kBAAkB,EAAC;AAFV,KAXU;AAerBC,IAAAA,WAAW,EAAE;AACXC,MAAAA,QAAQ,EAAE;AADC;AAfQ,GAAL;AAAA,CAApB;;IAqBMC,S;;;;;;;;;;;;;6BAEO;AAAA,UACEC,OADF,GACa,KAAKC,KADlB,CACED,OADF;;AAKL,UAAME,QAAQ,GAGJ;AAAK,QAAA,SAAS,EAAErB,OAAO,CAACU,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAEV,OAAO,CAACsB,GADrB;AAEE,QAAA,GAAG,EAAE,KAAKF,KAAL,CAAWG,SAFlB;AAGE,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWI,OAHpB;AAIE,QAAA,KAAK,EAAE;AAACf,UAAAA,eAAe,EAAC;AAAjB,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKW,KAAL,CAAWI,OADZ,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,KAAKJ,KAAL,CAAWK,OADb,CAJF,CAPF,CAHV;;AAuBA,aAEG;AAAK,QAAA,SAAS,EAAEzB,OAAO,CAAC0B,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAE1B,OAAO,CAAC2B,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKN,QADL,CADJ,CAFH;AASH;;;;EAvCmB3B,S;;AA0CxB,eAAeQ,UAAU,CAACC,MAAD,EAAS;AAAEyB,EAAAA,SAAS,EAAE;AAAb,CAAT,CAAV,CAAwCV,SAAxC,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport styling from \"./css/solution.module.css\";\r\nimport Container from '@material-ui/core/Container';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n        backgroundColor:'red'\r\n      },\r\n    card: {\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n      paddingTop: '75.25%',\r\n      backgroundPosition:'center'\r\n    },\r\n    cardContent: {\r\n      flexGrow: 1,\r\n    }\r\n  });\r\n\r\n\r\nclass Solutions extends Component {\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n\r\n\r\n        const Solution = (\r\n           \r\n                   \r\n                  <div className={styling.card}>\r\n                    <img\r\n                      className={styling.img}\r\n                      src={this.props.thumbnail}\r\n                      title={this.props.heading}\r\n                      style={{backgroundColor:'black'}}\r\n                    />\r\n                    <div  >\r\n                      <h2 >\r\n                      {this.props.heading}\r\n                      </h2>\r\n                      <p>\r\n                       {this.props.content}\r\n                      </p>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                \r\n        )\r\n\r\n        return (\r\n              \r\n           <div className={styling.container}>\r\n               <div className={styling.grid}>\r\n                   {Solution}\r\n               </div>\r\n           </div>\r\n                                    \r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Solutions);"]},"metadata":{},"sourceType":"module"}